"""empty message

Revision ID: 51d405c86304
Revises: 
Create Date: 2025-08-17 12:44:00.845748

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '51d405c86304'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('executors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('executors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_executors_name'), ['name'], unique=True)

    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('icon', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('client', sa.String(length=255), nullable=True),
    sa.Column('contractor', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projects_code'), ['code'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_worker', sa.Boolean(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('work_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=64), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('work_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_work_types_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_types_name'), ['name'], unique=True)

    op.create_table('blocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blocks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_blocks_project_id'), ['project_id'], unique=False)

    op.create_table('objects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('objects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_objects_project_id'), ['project_id'], unique=False)

    op.create_table('floors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=64), nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('floors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_floors_block_id'), ['block_id'], unique=False)

    op.create_table('works',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('executor_id', sa.Integer(), nullable=False),
    sa.Column('work_type_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('floor_id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['executor_id'], ['executors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['floor_id'], ['floors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['work_type_id'], ['work_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('works', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_works_executor_id'), ['executor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_works_floor_id'), ['floor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_works_object_id'), ['object_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_works_work_type_id'), ['work_type_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('works', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_works_work_type_id'))
        batch_op.drop_index(batch_op.f('ix_works_object_id'))
        batch_op.drop_index(batch_op.f('ix_works_floor_id'))
        batch_op.drop_index(batch_op.f('ix_works_executor_id'))

    op.drop_table('works')
    with op.batch_alter_table('floors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_floors_block_id'))

    op.drop_table('floors')
    with op.batch_alter_table('objects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_objects_project_id'))

    op.drop_table('objects')
    with op.batch_alter_table('blocks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blocks_project_id'))

    op.drop_table('blocks')
    with op.batch_alter_table('work_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_work_types_name'))
        batch_op.drop_index(batch_op.f('ix_work_types_category'))

    op.drop_table('work_types')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projects_code'))

    op.drop_table('projects')
    with op.batch_alter_table('executors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_executors_name'))

    op.drop_table('executors')
    # ### end Alembic commands ###
